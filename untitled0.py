# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nk_m_fOro5GFHEMCr9PVBaO2GSG8ZCHi
"""

from google.colab import drive
drive.mount('/content/drive')

import os
os.chdir('/content/drive/My Drive/verimadenciligi/hafta11')
!pwd

import pandas as pd
# Veri yükleme
df = pd.read_csv('bank.csv')
df.head()

# Veri ön işleme - Kategorik değişkenlerin sayısal değerlere dönüştürülmesi
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['marital'] = le.fit_transform(df['marital'])
le = LabelEncoder()
df['education'] = le.fit_transform(df['education'])
le = LabelEncoder()
df['job'] = le.fit_transform(df['job'])
df.head()
le = LabelEncoder()
df['default'] = le.fit_transform(df['default'])
le = LabelEncoder()
df['housing'] = le.fit_transform(df['housing'])
le = LabelEncoder()
df['contact'] = le.fit_transform(df['contact'])
le = LabelEncoder()
df['loan'] = le.fit_transform(df['loan'])
le = LabelEncoder()
df['month'] = le.fit_transform(df['month'])
le = LabelEncoder()
df['poutcome'] = le.fit_transform(df['poutcome'])
df.head()

# Girdi ve hedef değişkenin ayrıştırılması
X = df.drop(['deposit'], axis=1)
y = df['deposit'] #bagımsız degisken

# Eğitim ve test verilerinin ayrıştırılması
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#verilerin olceklenmesi
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train = sc.fit_transform(X_train) # modeli eğitme aşaması
X_test = sc.transform(X_test) # eğitilen modelde "transform" fonksiyonu ile uygulama yaparız.

# Lojistik regresyon modelinin oluşturulması ve eğitilmesi
from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train, y_train)

# Test verileri ile doğruluk hesaplanması
from sklearn.metrics import accuracy_score
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)